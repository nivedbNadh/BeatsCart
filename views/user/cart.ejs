<%-include('../layouts/user/header')%>
<%-include('../layouts/user/navbar')%>

<!-- cart items details -->

<div class="small-container cart-page">
  <% if (cart && cart.products.length>0){%>
  <table>
    <tr>
      <th>Product</th>
      <th>Quantity</th>
      <th>Subtotal</th>
    </tr>

      <% cart.products.forEach(product => { %>
        <tr>
          <td>
            <div class="cart-info">
              <img src="/uploads/<%= product.productId.image[0] %>" alt="" /> <!-- Assuming image URL is stored in the product model -->
              <div>
                <p><%= product.productId.name %></p>
                <small>Price ₹<%= product.productId.price.toFixed(2) %></small>
                <br />
                <a href="#" class="remove-btn" data-product-id="<%= product.productId._id %>">Remove</a>
              </div>
            </div>
          </td>
          <td>
            <div class="quantity">
              <button class="btn-decrease" data-product-id="<%= product.productId._id %>">-</button>
              <input type="text" value="<%= product.quantity %>" readonly />
              <button class="btn-increase" data-product-id="<%= product.productId._id %>" <%= product.quantity >= 10 ? 'disabled' : '' %> >+</button>
            </div>
          </td>
          <td>₹<%= (product.quantity * product.productId.price).toFixed(2) %></td>
        </tr>
      <% }); %>
    </table>

    <div class="total-price">
      <table>
        <tr>
          <td>Subtotal</td>
          <td>₹ <span class="subtotal"><%= subtotal.toFixed(2) %></span></td>
        </tr>
        <tr>
          <td>Tax</td>
          <td>₹ <span class="tax"><%= (subtotal * 0.05).toFixed(2) %></span></td><!--  tax is 5% -->
        </tr>
        <tr>
          <td>Total</td>
          <td>₹ <span class="total"><%= (subtotal * 1.05).toFixed(2) %> </span></td> <!-- Total = Subtotal + Tax -->
        </tr>
        <tr>
          <td>
            <a href="/checkout">
              <button class="btn-checkout">Checkout</button>
            </a>
           </td>
        </tr>
    </div>
  </table>

  </div>
  

    <!--cart is empty work below else case-->
    <% } else { %>
      <!-- <tr> -->
      <!-- <td colspan="3" class="text-center"> -->
      <img class="cart-image" src="/uploads/empty-cart-5521508-4610092.png">
      <div class="cart-button">
      <a href="/products" class="btn btn-primary cart-btn-transform m-3" data-abc="true">continue shopping</a>
    </div>
  <!-- </td> -->
<!-- </tr> -->
    <% } %>

  
<style>
 * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: "Poppins", sans-serif;
    background-color: #f4f4f4;
  }

  .cart-page {
  margin: 100px auto; 
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
}

  table {
    width: 100%;
    border-collapse: collapse;
  }

  th {
    text-align: left;
    padding: 15px;
    background-color: #0040ffd7;
    color: #fff;
    font-weight: normal;
    border-radius: 8px 8px 0 0;
  }

  td {
    padding: 15px;
    border-bottom: 1px solid #ddd;
  }

  .cart-info {
    display: flex;
    align-items: center;
  }

  .cart-info img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 8px;
    margin-right: 15px;
  }

  .product-name {
    font-weight: bold;
    color: #333;
  }

  .price {
    color: #0040ffd7;
  }

  .remove-btn {
    color: rgba(255, 42, 0, 0.911);
    font-size: 14px;
    text-decoration: underline;
    cursor: pointer;
  }

  .quantity {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity button {
    background-color: #0040ffd7;
    color: #fff;
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    font-size: 18px;
    border-radius: 5px;
    margin: 0 5px;
    transition: background 0.3s ease;
  }

  .quantity button:hover {
    background-color: #0040ffd7;
  }

  .quantity input {
    width: 40px;
    height: 30px;
    text-align: center;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 16px;
    margin: 0 5px;
  }

  .total-price {
    margin-top: 30px;
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .total-price table {
    width: 100%;
  }

  .total-price td {
    padding: 10px 15px;
  }

  .btn-checkout {
  background-color: rgba(0, 128, 51, 0.89); 
  color: #fff;
  border: none;
  padding: 12px 20px;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  text-transform: uppercase; 
}

.btn-checkout:hover {
  background-color: #0040ffd7; 
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); 
}

.btn-checkout:active {
  background-color: #0040ffd7; 
  transform: scale(1); 
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15); 
}


  .cart-image {
    max-width: 50%;
    margin: 20px 0;
  }

  .cart-button {
    text-align: center;
    margin-top: 20px;
  }

  .cart-button .btn {
    background-color: #0040ffd7;
    color: #fff;
    padding: 12px 20px;
    border-radius: 5px;
    text-transform: uppercase;
    font-weight: bold;
    transition: background 0.3s ease;
  }

  .cart-button .btn:hover {
    background-color: #0040ffd7;
  }
</style>

<!-- Footer -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>


document.addEventListener('DOMContentLoaded', function () {
    function updateCartTotals() {
        let subtotal = 0;
        document.querySelectorAll('table .cart-info').forEach(row => {
            const priceElement = row.querySelector('small');
            const quantityElement = row.querySelector('input');

            if (priceElement && quantityElement) {
                const price = parseFloat(priceElement.innerText.replace('Price ₹', ''));
                const quantity = parseInt(quantityElement.value);
                subtotal += price * quantity;
            }
        });

        document.querySelector('.total-price .subtotal').innerText = `₹${subtotal.toFixed(2)}`;
        const tax = subtotal * 0.05;
        document.querySelector('.total-price .tax').innerText = `₹${tax.toFixed(2)}`;
        const total = subtotal + tax;
        document.querySelector('.total-price .total').innerText = `₹${total.toFixed(2)}`;
    }

    document.querySelectorAll('.btn-decrease').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');
            fetch(`/update-cart-quantity`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId, action: 'decrement' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Quantity updated successfully') {
                    const input = this.nextElementSibling;
                    if (input) {
                        let quantity = parseInt(input.value);
                        if (quantity > 1) {
                            input.value = --quantity;
                            updateCartTotals();
                            location.reload(); // Add this line to refresh the page
                        }
                    }
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the cart. Please try again later.');
            });
        });
    });

    document.querySelectorAll('.btn-increase').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');
            fetch(`/update-cart-quantity`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId, action: 'increment' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Quantity updated successfully') {
                    const input = this.previousElementSibling;
                    if (input) {
                        let quantity = parseInt(input.value);
                          input.value = ++quantity;
                          updateCartTotals();

                          if(quantity >=data.availableStock) {
                            this.disabled=true
                          }
                        }
                        location.reload(); // refresh page 
                       
                        } else{
                          alert(data.message)

                          if(data.availableStock !== undefined) {
                            this.disabled=true
                          }
                        }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the cart. Please try again later.');
            });
        });
    });

    document.querySelectorAll('.remove-btn').forEach(button => {
        button.addEventListener('click', function (event) {
            event.preventDefault();
            const productId = this.getAttribute('data-product-id');
            // show sweet alert
            Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to delete this product',
    icon: 'warning',
    showCancelButton: true, 
    confirmButtonColor: '#3085d6', 
    cancelButtonColor: '#d33', 
    confirmButtonText: 'Yes',
    cancelButtonText: 'Cancel'


            }).then((result)=>{
              if(result.isConfirmed){
                
            fetch(`/remove-from-cart/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.message === 'Product removed from cart successfully') {
                    location.reload();
                } else {
                    console.error('Failed to remove item from cart');
                    alert('An error occurred while trying to remove the item from the cart. Please try again later.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while trying to remove the item from the cart. Please try again later.');
            });
            
          }
            })
        });
    });
});


    // function updateCartTotals() {
    //     let subtotal = 0;
    //     document.querySelectorAll('table .cart-info').forEach(row => {
    //         const price = parseFloat(row.querySelector('small').innerText.replace('Price ₹', ''));
    //         const quantity = parseInt(row.querySelector('input').value);
    //         subtotal += price * quantity;
    //     });
    //     document.querySelector('.total-price .subtotal').innerText = `₹${subtotal.toFixed(2)}`;
    //     const tax = subtotal * 0.05;
    //     document.querySelector('.total-price .tax').innerText = `₹${tax.toFixed(2)}`;
    //     const total = subtotal + tax;
    //     document.querySelector('.total-price .total').innerText = `₹${total.toFixed(2)}`;
    // }

    // document.querySelectorAll('.btn-decrease').forEach(button => {
    //     button.addEventListener('click', function () {
    //         const input = this.nextElementSibling;
    //         let quantity = parseInt(input.value);
    //         if (quantity > 1) {
    //             input.value = --quantity;
    //             updateCartTotals();
    //         }
    //     });
    // });

    // document.querySelectorAll('.btn-increase').forEach(button => {
    //     button.addEventListener('click', function () {
    //         const input = this.previousElementSibling;
    //         let quantity = parseInt(input.value);
    //         input.value = ++quantity;
    //         updateCartTotals();
    //     });
    // });
</script>

<%-include('../layouts/user/footer')%>
