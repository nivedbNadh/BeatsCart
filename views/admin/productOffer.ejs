<%-include('../layouts/admin/adminNav')%>

<div class="container mt-5">
    <h2>Product offer</h2>
    <!-- <a href="addProduct"><button class="btn btn-add-product">Add Product</button></a> -->
    <div class="table-responsive">
        <table id="usersTable" class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>No</th>
                    <th>Product Name</th>
                    <th>Image</th>
                    <th>Discount</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <!-- <th>Status</th> -->
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach((product, index) => { 
                    const productOffer = productOff.find(offer => offer.productId.toString() === product._id.toString());
                %>
                <tr>
                    <td><%= index + 1 %></td>
                    <td><%= product.name %></td>
                    <td><img src="/uploads/<%= product?.image[0] %>" class="img-thumbnail" alt="Product Image"></td>
                    
                    <!-- If productOffer exists, show its data in the input fields -->
                    <td>
                        <input type="number" class="form-control discount-input"  data-product-id="<%=product._id%>"name="discount" min="0" max="100" placeholder="0" value="<%= productOffer ? productOffer.discount : '' %>">
                    </td>
                    <td>
                        <input type="date" class="form-control start-date-input" data-product-id="<%=product._id%>" name="startDate" value="<%= productOffer ? new Date(productOffer.startDate).toISOString().split('T')[0] : '' %>">
                    </td>
                    <td>
                        <input type="date" class="form-control  end-date-input " data-product-id="<%=product._id%>" name="endDate" value="<%= productOffer ? new Date(productOffer.endDate).toISOString().split('T')[0] : '' %>">
                    </td>

                    <td class="d-flex">
                        <!--Show update button if the productOffer exists, else show submit button-->

                        <button class="btn <%= productOffer ? 'btn-update btn-green' : 'btn-submit' %>" data-product-id="<%= product._id %>">
                         <%= productOffer ? 'Update' : 'Submit' %>
                        </button>
                        

                        <button class="btn btn-delete" data-product-id="<%= product._id %>">Delete</button>
                    </td>                   
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>


<%-include('../layouts/admin/adminfooter')%>


<style>
.container {
    margin-top: 80px; /* Creates space between the navbar and your content */
    margin-left: 223px; /* Adjust this value based on the width of your navbar */
    padding-right: 20px; /* Optional: adds padding on the right side */
}

.btn-add-product {
    margin-bottom: 20px;
    border: none;
    background-color: #D2B48C; /* Burlywood color */
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    font-weight: bold;
}

.btn-edit {
    background-color: #007BFF; /* Bootstrap primary color */
    color: white;
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    margin-right: 5px;
    font-weight: bold;
}


/* Add this to your CSS file */
.btn-green {
    background-color: green;
    color: white;
    border: 1px solid darkgreen; /* Optional: for a border */
}

.btn-green:hover {
    background-color: darkgreen;
}

.btn-delete {
    background-color: #DC3545; /* Bootstrap danger color */
    color: white;
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    font-weight: bold;
}


.img-thumbnail {
    max-width: 40px;
    max-height: 40px;
    border-radius: 5px;
}

/* Style for Submit button */
.btn-submit {
    background-color: #28A745; /* Bootstrap success color */
    color: white;
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    margin-right: 5px;
    font-weight: bold;
}

</style>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>

    // adding code
    document.addEventListener('DOMContentLoaded',()=>{
        const submitButtons=document.querySelectorAll('.btn-submit')

        submitButtons.forEach(button=>{
            button.addEventListener('click',async (event)=>{
                const row=event.target.closest('tr')
                const productId=event.target.dataset.productId

                const discount = row.querySelector('input[name="discount"]').value
                const startDate = row.querySelector('input[name="startDate"]').value
                const endDate = row.querySelector('input[name="endDate"]').value


                if (!discount || !startDate || !endDate) {
                Toastify({
                    text: 'All fields are required',
                    duration: 5000,
                    close: true,
                    gravity: 'top',
                    position: 'center',
                    backgroundColor: 'orange',
                }).showToast();
                return;
            }

            // Date validation
            const today = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format
            if (startDate < today || endDate < today) {
                Toastify({
                    text: 'Start and end dates cannot be in the past',
                    duration: 5000,
                    close: true,
                    gravity: 'top',
                    position: 'center',
                    backgroundColor: 'red',
                }).showToast();
                return;
            }

            if (endDate < startDate) {
                Toastify({
                    text: 'End date cannot be earlier than start date',
                    duration: 5000,
                    close: true,
                    gravity: 'top',
                    position: 'center',
                    backgroundColor: 'red',
                }).showToast();
                return;
            }



                try {
                    const response=await fetch('/addProductOffers',{
                        method:'POST',
                        headers:{
                            'Content-Type':'application/json',
                            // 'X-CSRF-Token':document.querySelector('meta[name="csrf-token"]').getAttribute('content')

                        },
                        body:JSON.stringify({
                            productId,
                            discount,
                            startDate,
                            endDate
                        })
                    })
                    console.log(productId,
                            discount,
                            startDate,
                            endDate)

                    if(response.ok){
                        Toastify({
                        text: 'Product offer added successfully',
                        duration: 3000,
                        close: true,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: 'green',
                    }).showToast();

                    setTimeout(() => {
                        window.location.reload();
                    }, 3500);

                    } else{
                        alert('Failed to add product offer')
                    }
                    


                } catch (error) {
                    console.error('Error:',error)
                    alert('Error adding product ofer')
                }



            })
        })
    })


    <!--updating code--> 


    document.querySelectorAll('.btn-update').forEach(button=>{
        button.addEventListener('click',function(){
            const productId=this.getAttribute('data-product-id')
            const discount=document.querySelector(`.discount-input[data-product-id="${productId}"]`).value
            const startDate=document.querySelector(`.start-date-input[data-product-id="${productId}"]`).value
            const endDate=document.querySelector(`.end-date-input[data-product-id="${productId}"]`).value


            fetch(`/updateProductOffer/${productId}`,{
                method:'POST',
                headers:{
                    'Content-Type':'application/json',
                
            },
            body:JSON.stringify({productId,discount,startDate,endDate})

        })
        .then(response=>response.json())
        .then(data=>{
            if(data.success) {
                Toastify({
                        text: 'Product offer updated successfully',
                        duration: 3000,
                        close: true,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: 'green',
                    }).showToast();

                    setTimeout(() => {
                        window.location.reload();
                    }, 3500);
            } else{
                alert('An error occured.pleaase try again')
            }
        })
        .catch(error=> console.error('Error:',error))
            
        

    })

        })
    


// product offer delting code

document.addEventListener('DOMContentLoaded',()=>{
    document.querySelectorAll('.btn-delete').forEach(button=>{
        button.addEventListener('click',async function(){
            const row=this.closest('tr')
            const productId=this.getAttribute('data-product-id')

            // row.querySelector('input[name="discount"]').value=''
            // row.querySelector('input[name="startDate"]').value=''
            // row.querySelector('input[name="endDate"]').value=''

            try{
                const response=await fetch(`/deleteProductOffer/${productId}`,{
                    method:'DELETE',
                    headers:{
                        'Content-Type':'application/json',
                    },
                    body:JSON.stringify({productId})
                })

                const data=await response.json()

                if(data.success) {
                    Toastify({
                text:'Product offer deleted successfully',
                duration:3000,
                close:true,
                gravity:'top',
                position:'center',
                backgroundColor:"red",
        }).showToast()
        
            setTimeout(() => {
                window.location.reload();
            }, 3500);
            
                } else{
                    alert('Failed to delete product offer')
                }

            } catch(error){
                console.error('Error:',error)
                alert('Error deleting product offer')
            }



        })
    })
})







</script>